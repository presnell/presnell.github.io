<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Recent &amp; Upcoming Talks | Brett Presnell</title>
    <link>https://presnell.github.io/talk/</link>
      <atom:link href="https://presnell.github.io/talk/index.xml" rel="self" type="application/rss+xml" />
    <description>Recent &amp; Upcoming Talks</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Wed, 21 Feb 2024 01:12:01 -0500</lastBuildDate>
    <image>
      <url>https://presnell.github.io/images/icon_hu80eeec5b7631200ca7b388ae8cc10e3e_17874_512x512_fill_lanczos_center_2.png</url>
      <title>Recent &amp; Upcoming Talks</title>
      <link>https://presnell.github.io/talk/</link>
    </image>
    
    <item>
      <title>Response to James Sullivan, UF Strategic Communications &amp; Marketing</title>
      <link>https://presnell.github.io/talk/marchmadness/</link>
      <pubDate>Wed, 21 Feb 2024 01:12:01 -0500</pubDate>
      <guid>https://presnell.github.io/talk/marchmadness/</guid>
      <description>
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Probability of a Perfect Bracket
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
A Primer: The Number of Possible Brackets for an Eight-Team Tournament
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
I think it&amp;#39;s easiest to understand this by first considering a
tournament with only 8 teams (A, B, C, D, E, F, G, H) and hence three
rounds:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;quarterfinals with 4 games (A vs B, C vs D, E vs F, and G vs H)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;semifinals with 2 games (winner of A vs B against winner of C vs D
and winner of E vs F against winner of G vs H)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;final with 1 game (winner of the ABCD group against winner of the EFGH group)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For each game in the quarterfinals, you can choose either of the two
teams, giving you
\[
2 \times 2 \times 2 \times 2 = 2^4 = 16
\]
possible ways to pick the winners of the quarterfinal games (ACEG,
ACEH, ACFG, ACFH, ADEG, ADEH, ADFG, ADFH, BCEG, BCEH, BCFG, BCFH,
BDEG, BDEH, BDFG, and BDFH).&lt;/p&gt;
&lt;p&gt;
No matter which 4 teams you pick to win in the quarterfinals, you can
choose either of 2 teams in each of the 2 semifinal games, so you have
\(2 \times 2 = 2^2 = 4\) possible choices. For example, if you chose
A, C, E, and G to win their quarterfinal games, then your
possibilities would be AE, AG, CE, and CG. But you have 4 possible
choices no matter which of the 16 sets of teams you picked in the
first round, so there are \(16 * 4 = 64\) possible ways to fill out
the first two rounds (quarterfinals and semifinals).&lt;/p&gt;
&lt;p&gt;
No matter which teams you picked to win in the quarterfinals and
semifinals, you can choose either of your two semifinal winners to win
the final game. Thus, no matter which of the 64 possible ways you
chose to fill in the quarterfinal and semifinal rounds, you have 2
possible ways to finish your bracket, leaving you with a total of \(64 *
2 = 128\) possible ways to fill in the complete bracket.&lt;/p&gt;
&lt;p&gt;
Notice that there were 4 games in the first round, 2 games in the second
round, and 1 game in the final round, for a total of 7 games, and the
number of possible brackets turned out to be
\[
2^4 \times 2^2 \times 2^1 = 2^{(4 + 2 + 1)} = 2^7 = 128.
\]&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
So How Many Possible Brackets for the 64 Team NCAA Tournament?
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Now, considering the real March Madness tournament, if we ignore the
play-in games, there are 63 games in the tournament: 32 first round
games, 16 second round games, 8 &lt;em&gt;&amp;#34;Sweet 16&amp;#34;&lt;/em&gt; games, 4 &lt;em&gt;&amp;#34;Elite 8&amp;#34;&lt;/em&gt;
games, 2 &lt;em&gt;&amp;#34;Final Four&amp;#34;&lt;/em&gt; games, and 1 championship game (32 + 16 + 8 +
4 + 2 + 1 = 63). Following the same logic as we did for the eight-team
tournament:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You could pick either of the two teams in each of the 32 first round
games, so altogether there are \(2^{32} = \text{4,294,967,296}\)
possible sets of winners you could pick for the first round.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Similarly, for whatever set of 32 teams you picked to win the first
round games, there are \(2^{16} = \text{65,536}\) different sets of
teams that you could to win their 2nd round games, so by the time
you fill in your teams for the first 2 rounds, you have chosen 1 of
\(2^{32} * 2^{16} = 2^{48} = \text{281,474,976,710,656}\) possibilities.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Continuing in this way, we find that there are
\[
2^{32} * 2^{16} * 2^8 * 2^4 * 2^2 * 2^1 = 2^{63}
\]
possible ways to fill in your bracket.  That&amp;#39;s
\[
2^{63} = \text{9,223,372,036,854,775,808}
\]
or roughly 9 quintillion (a quintillion is a billion billions).&lt;/p&gt;
&lt;p&gt;
So, &lt;strong&gt;&lt;strong&gt;if&lt;/strong&gt;&lt;/strong&gt; you flipped a coin to pick your team in each of the 63
games, meaning that you picked your bracket completely at random from
among the 9 quintillion possibilities, then the probability that you
would pick the perfect bracket for that year&amp;#39;s tournament would be 1
in 9 quintillion.&lt;/p&gt;
&lt;p&gt;
For comparision, the probability that a randomly chosen Floridian
would be killed by lightning in the next year is a little less than 1
in 3 million, so that randomly chosen Floridian has a 3 trillion
(3,000,000,000,000) times greater chance of being killed by lightning
next year than a randomly chosen bracket has of being perfect.&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;However&lt;/strong&gt;&lt;/strong&gt;, and I can&amp;#39;t emphasize this enough, this probability of
choosing a perfect bracket is &lt;strong&gt;&lt;strong&gt;only&lt;/strong&gt;&lt;/strong&gt; correct &lt;strong&gt;&lt;strong&gt;if&lt;/strong&gt;&lt;/strong&gt; you randomly
choose your bracket by flipping a fair coin 63 times. Of course
absolutely &lt;strong&gt;&lt;strong&gt;no one&lt;/strong&gt;&lt;/strong&gt; picks their bracket this way.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
So What&amp;#39;s the Actual Probability of Picking a Perfect Bracket?
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;If&lt;/strong&gt;&lt;/strong&gt; you didn&amp;#39;t have any opinion at all about the relative strengths
of the teams, &lt;strong&gt;&lt;strong&gt;and if&lt;/strong&gt;&lt;/strong&gt; you weren&amp;#39;t concerned about competing with
other bracket pickers for a prize, then it would be much better to
just pick the higher seeded team to win each game, and then pick
whichever of the 1 seeds you prefer in the semifinal and final games
(there are \(2^3 = 8\) ways you could choose the winners of these last
3 games). The probability that the tournament will go completely &amp;#34;by
the chalk&amp;#34; and give you a perfect bracket is still vanishingly small,
but it&amp;#39;s bigger than 1 in 9 quintillion.&lt;/p&gt;
&lt;p&gt;
For example, in 2023, I would have estimated the probability that this
&amp;#34;chalk&amp;#34; method would yield a perfect bracket to be somewhere between 1
in 291 billion and 1 in 84 billion, depending on which teams you chose
to win the final three games. Those are still extremely small
probabilities, and our randomly chosen Floridian is still somewhere
between 25,000 and 93,000 times more likely to die from a lightning
strike this year, but the chalk method is a lot better than flipping
coins.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
Some Other Comments on Perfect Brackets
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-3&#34;&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;headline-6&#34;&gt;
Why You Probably Shouldn&amp;#39;t Choose a Completely by the Chalk Bracket for Your Pool
&lt;/h4&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-4&#34;&gt;
&lt;p&gt;
If you are competing in a bracket pool, then your objective is to
maximize your expected winnings. This is not the same as choosing your
bracket to maximize your chances of being perfect (which is
practically impossible anyway), and it&amp;#39;s not even the same as
maximizing your expected final &amp;#34;score&amp;#34;.  For example, picking the
higher seeded team to win &lt;strong&gt;&lt;strong&gt;every&lt;/strong&gt;&lt;/strong&gt; game is generally not a good strategy,
because lots of other people will do the same, or close to it, so even
if you did win, you would probably split the pot with a lot of other
players.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-7&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;headline-7&#34;&gt;
How Did I Estimate the Probability that a &amp;#34;By the Chalk&amp;#34; Bracket is Perfect?
&lt;/h4&gt;
&lt;div id=&#34;outline-text-headline-7&#34; class=&#34;outline-text-4&#34;&gt;
&lt;p&gt;
If you have a way to estimate the probability that team A wins over
team B in any potential matchup in the tournament, then you can
estimate the probability that a given bracket turns out to be perfect
in a given year. Many of the &amp;#34;power ratings&amp;#34; that are provided by
various sites on the web can be used to estimate the needed
probabilities, although the sites don&amp;#39;t usually tell you how to do
it. For the calculation I did above for the 2023 tournament, I used
the team ratings from FiveThirtyEight.com.  Unfortunately these won&amp;#39;t
be available anymore due to cutbacks at Disney/ABC, so I&amp;#39;ll have to
use something else for 2024.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-8&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;headline-8&#34;&gt;
What About the Play-in Games?
&lt;/h4&gt;
&lt;div id=&#34;outline-text-headline-8&#34; class=&#34;outline-text-4&#34;&gt;
&lt;p&gt;
Note: If you have to pick the 4 play-in games as well, then you have
to pick the winners of \(63 + 4 = 67\) games, so in this case there are
\[
2^{67} = \text{147,573,952,589,676,412,928}
\]
possible brackets, and the probability that a bracket chosen by
flipping coins turns out perfect is about 1 in 148 quintillion.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-9&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-9&#34;&gt;
Analyzing the Importance of 3 Additional Basketball Statistics
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-9&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
You said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We’d also give you 3 additional basketball statistics (points per
game, assists per game, win/loss ratio, etc.)  to analyze their
statistical importance (or lack thereof) in determining the winner of
a game.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I&amp;#39;m not sure that I would have the data at hand, or the spare time, to
properly answer this question. Maybe, but given the other things I
need to get done in the meantime, it&amp;#39;s very doubtful.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-10&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-10&#34;&gt;
What&amp;#39;s My Interest in All of This?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-10&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Since at least the early 2000&amp;#39;s I have participated in a small
&amp;#34;portfolio pool&amp;#34; with some other statisticians and computer
scientists, as well as some &amp;#34;civilians&amp;#34;. I started thinking a little
more seriously about it in the 2010&amp;#39;s and around 2016 I got an idea
for how I might optimize my picks for the pool. This led to me
simulating the March Madness tournament on my home computer and using
the outcomes to help me make my selections. My methods have evolved
over the years and these days I run hundreds of thousands, and even
millions of simulations of the tournment to generate training and test
sets for choosing my picks and evaluating how well they are likely to
perform. Almost every year I have ideas for improvements that I
frantically implement and test out at the last minute so that I can
submit my picks before the tournament begins. I have certainly learned
a lot in the process.&lt;/p&gt;
&lt;p&gt;
I know of at least one other pool participant who is doing similar
things: he leads a large-scale optimization research team at Google.
A group of us started comparing ideas a couple of years ago and we
hope at some point to write a paper (or two) about it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>MBL2 2023: A Closer Look</title>
      <link>https://presnell.github.io/talk/mbl/</link>
      <pubDate>Thu, 11 Jan 2024 14:05:46 -0500</pubDate>
      <guid>https://presnell.github.io/talk/mbl/</guid>
      <description>&lt;p&gt;The morons betting league (MBL2) is a small informal group of friends
(morons) who compete every week by picking ten football bets (NCAAF
and NFL) totaling 100 &amp;ldquo;units&amp;rdquo; against the spread and/or over-under
Here&amp;rsquo;s a small sample of the data. Note that&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The players (morons) are represented by one-letter codes.&lt;/li&gt;
&lt;li&gt;Some weeks may not have happened yet, so you may see a lot of
missing (NA) data.&lt;/li&gt;
&lt;li&gt;There is one exceptional (bowl) week where the morons place 20 bets
totalling 200 units. Note also that one moron placed 10 bets
totalling 200 units that week, which is technically against the
&amp;ldquo;rules&amp;rdquo; of the MBL.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mia&lt;/code&gt; is an indicator of whether the moron failed to enter their
picks. According to the MBL2 &amp;ldquo;rules&amp;rdquo; a player is allowed to have one
missed week replaced by their score from the subsequent week. The
&amp;ldquo;rules&amp;rdquo; do not specify what happens if the week missed or the week
following the week missed is the 20-bet week.&lt;/li&gt;
&lt;li&gt;The listing of the teams/games and the line is very irregular
because these are emailed and entered by hand with no
standardization. For this reason, the league inforamtion (NCAAF vs
NFL) is also unavailable. So the only useful data are the moron,
week, number of units wagered, and number of units won.&lt;/li&gt;
&lt;/ul&gt;
&lt;details&gt;
&lt;summary&gt;Code&lt;/summary&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mbl |&amp;gt;
    select(-cells) |&amp;gt;
    slice_sample(n = 10) |&amp;gt;
    arrange(week, moron)
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 10 × 7
   moron  week mia   team_s                         line      wager units_won
   &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;chr&amp;gt;                          &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
 1 K         0 FALSE uscar                          2.5          10         0
 2 P         3 FALSE FSU @ CLEM                     OVER 55.0    10         5
 3 P         3 FALSE NE @ NYJ                       NYJ +3.0     10         0
 4 P         7 FALSE (17) Duke at (4) Florida State FSU -13.5    20        20
 5 D         8 FALSE Horns                          -17.5        20        20
 6 W         9 FALSE kssu/UTEX                      &amp;gt;50.5        10        10
 7 K        11 FALSE MIA                            -11.5        10         0
 8 S        11 FALSE Clemson                        -6.5         10        10
 9 D        14 FALSE Army                           -2.5         10        10
10 S        17 FALSE LV                             3            10         5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The next bit of code creates a result column (win, lose, or push) the
wager and units_won columns.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Code&lt;/summary&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mbl &amp;lt;- mbl |&amp;gt;
    mutate(
        result = (units_won == wager) - (units_won == 0) + 2,
        result = ifelse(is.na(result), 4, result),
        result = c(&amp;quot;lose&amp;quot;, &amp;quot;push&amp;quot;, &amp;quot;win&amp;quot;, NA)[result]) 
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;p&gt;The next bit of code creates a summary data frame of results by moron
and week. It uses &lt;code&gt;tidyr::fill()&lt;/code&gt; to backfill the units won for weeks
where &lt;code&gt;mia == TRUE&lt;/code&gt;. The variable &lt;code&gt;units_won10&lt;/code&gt; adjusts the number of
units won to a 10-bet basis, in order to standardize the 20-bet bowl
week to match the other weeks.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Code&lt;/summary&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mbl_by_moron_week &amp;lt;- mbl |&amp;gt;
    summarize(
        n_bets = n(),
        wins = sum(result == &amp;quot;win&amp;quot;),
        losses = sum(result == &amp;quot;lose&amp;quot;),
        pushes = sum(result == &amp;quot;push&amp;quot;),
        units_won = sum(units_won),
        .by = c(moron, week, mia)
    ) |&amp;gt;
    ## Handle MIA weeks with tidyr::fill().
    arrange(moron, week) |&amp;gt;    # Making sure that observations are ordered correctly.
    group_by(moron) |&amp;gt;         # Grouping means filling done only within group (by moron).
    fill(units_won, .direction = &amp;quot;up&amp;quot;) |&amp;gt;
    ungroup() |&amp;gt;
    filter(!is.na(units_won)) |&amp;gt;
    mutate(units_won10 = (10/n_bets) * units_won) |&amp;gt;
    mutate(season_total = cumsum(units_won), .by = moron)
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;p&gt;Here are some quantiles of the weekly units won (10-bet basis) by the
morons. This is an attempt to determine what constitutes a good or
bad weekly total.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Code&lt;/summary&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mbl_by_moron_week |&amp;gt;
    pull(units_won10) |&amp;gt;
    quantile(probs = seq(0.1, 0.9, by = 0.1))
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;pre&gt;&lt;code&gt;10% 20% 30% 40% 50% 60% 70% 80% 90% 
 30  40  40  45  50  57  60  67  75 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And here is a histogram of the same information.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Code&lt;/summary&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Histogram of weekly units won by the morons.
mbl_by_moron_week |&amp;gt;
    ggplot(aes(x = units_won10)) +
    geom_histogram(binwidth = 10)
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;p&gt;&lt;img src=&#34;index.markdown_strict_files/figure-markdown_strict/hist-weekly-totals-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This is a line plot of the moron&amp;rsquo;s season totals by week.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Code&lt;/summary&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mbl_by_moron_week |&amp;gt;
    ggplot(aes(x = week, y = season_total,
               color = fct_reorder2(moron, week, season_total))) +
    geom_line(linewidth = 1) +
    labs(color = &amp;quot;moron&amp;quot;, x = &amp;quot;Week&amp;quot;, y = &amp;quot;Season Total&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;p&gt;&lt;img src=&#34;index.markdown_strict_files/figure-markdown_strict/moron_cum_totals-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;How many weeks has each moron been one of the top scorers?&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Code&lt;/summary&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mbl_by_moron_week |&amp;gt;
    group_by(week) |&amp;gt;
    mutate(
        week_max = max(units_won),
        top_scorer = (units_won == week_max)
    ) |&amp;gt;
    ungroup() |&amp;gt;
    filter(top_scorer) |&amp;gt;
    summarize(n = n(), .by = moron) |&amp;gt;
    arrange(desc(n))
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 6 × 2
  moron     n
  &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;
1 H         5
2 K         5
3 W         5
4 P         4
5 S         4
6 D         3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which moron&amp;rsquo;s weekly totals (10-bet basis) are the most (and least)
variable (ordered by standard deviation)?&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Code&lt;/summary&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mbl_by_moron_week |&amp;gt;
    summarize(mean = mean(units_won10), sd = sd(units_won10),
              median = median(units_won10), mad = mad(units_won10),
              .by = moron) |&amp;gt;
    arrange(desc(sd))
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 6 × 5
  moron  mean    sd median   mad
  &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
1 W      51.8  20.2     50 14.8 
2 K      49.6  18.3     50 22.2 
3 P      56.2  16.1     55 22.2 
4 H      51.4  16.1     50 14.8 
5 D      55.7  15.6     55 22.2 
6 S      49.9  14.6     40  7.41
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which moron&amp;rsquo;s weekly totals are the most (and least) variable (ordered
by median absolute deviation)? Using &lt;code&gt;knitr::kable()&lt;/code&gt; here for a
prettier table, but I&amp;rsquo;m getting misaligned column headers. I may
report this as a bug.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Code&lt;/summary&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mbl_by_moron_week |&amp;gt;
    summarize(
        mean = mean(units_won10), sd = sd(units_won10),
        median = median(units_won10), mad = mad(units_won10),
        .by = moron) |&amp;gt;
    arrange(desc(mad), desc(sd)) |&amp;gt;
    kable()
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;moron&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mean&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;sd&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;median&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mad&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;K&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.60526&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18.33832&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;50&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;22.239&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;P&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;56.18421&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16.12384&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;55&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;22.239&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;D&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;55.65789&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15.63121&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;55&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;22.239&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;W&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51.84211&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;20.22172&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;50&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14.826&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;H&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51.44737&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16.07957&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;50&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14.826&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;S&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.86842&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14.63618&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;40&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.413&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Overall number of winning, losing, and pushed wagers for each moron.
The stated win percentage counts pushes as half a win.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Code&lt;/summary&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mbl |&amp;gt;
    filter(!is.na(result)) |&amp;gt;
    summarize(n = n(), .by = c(moron, result)) |&amp;gt;
    pivot_wider(names_from = result, values_from = n, values_fill = 0) |&amp;gt;
    mutate(
        n = win + push + lose,
        win_pct = 100 * (win + 0.5*push) / n) |&amp;gt;
    relocate(n, win, lose, push, .after = moron) |&amp;gt;
    arrange(desc(win_pct))
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 6 × 6
  moron     n   win  lose  push win_pct
  &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;
1 P       200   109    88     3    55.2
2 D       200   108    88     4    55  
3 W       200   103    96     1    51.8
4 S       200    98    97     5    50.2
5 H       190    91    94     5    49.2
6 K       180    84    92     4    47.8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Do these morons know what they&amp;rsquo;re doing when they wager different
amounts? The overall number of winning, losing, and pushed wagers by
units wagered.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Code&lt;/summary&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mbl |&amp;gt;
    filter(!is.na(result)) |&amp;gt;
    summarize(n = n(), .by = c(wager, result)) |&amp;gt;
    pivot_wider(names_from = result, values_from = n, values_fill = 0) |&amp;gt;
    mutate(
        n = win + push + lose,
        win_pct = 100 * (win + 0.5*push) / n) |&amp;gt;
    relocate(n, win, lose, push, .after = wager) |&amp;gt;
    arrange(wager)
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 4 × 6
  wager     n   win  lose  push win_pct
  &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;
1     5   104    51    50     3    50.5
2    10   996   507   472    17    51.8
3    15    16     4    11     1    28.1
4    20    54    31    22     1    58.3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The overall percentages of winning, losing, and pushed wagers by units
wagered.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Code&lt;/summary&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mbl |&amp;gt;
    filter(!is.na(result)) |&amp;gt;
    summarize(n = n(), .by = c(wager, result)) |&amp;gt;
    pivot_wider(names_from = result, values_from = n, values_fill = 0) |&amp;gt;
    mutate(
        n = win + push + lose,
        win = 100*win/n,
        push = 100*push/n,
        lose = 100*lose/n
    ) |&amp;gt;
    relocate(n, win, lose, push, .after = wager) |&amp;gt;
    arrange(wager)
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 4 × 5
  wager     n   win  lose  push
  &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
1     5   104  49.0  48.1  2.88
2    10   996  50.9  47.4  1.71
3    15    16  25    68.8  6.25
4    20    54  57.4  40.7  1.85
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The overall percentages of wining, losing, and pushed wagers by units
wagered for the individual morons. Note that some morons only ever bet
in 10-unit increments.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Code&lt;/summary&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mbl |&amp;gt;
    filter(!is.na(result)) |&amp;gt;
    summarize(n = n(), .by = c(moron, wager, result)) |&amp;gt;
    pivot_wider(names_from = result, values_from = n, values_fill = 0) |&amp;gt;
    mutate(
        n = win + push + lose,
        win_pct = 100 * (win + 0.5*push) / n) |&amp;gt;
    relocate(n, win, lose, push, .after = wager) |&amp;gt;
    arrange(moron, wager) |&amp;gt;
    print(n = Inf)
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 17 × 7
   moron wager     n   win  lose  push win_pct
   &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;
 1 D         5    17     6    10     1    38.2
 2 D        10   174    99    72     3    57.8
 3 D        15     1     0     1     0     0  
 4 D        20     8     3     5     0    37.5
 5 H         5    40    17    21     2    45  
 6 H        10   128    63    62     3    50.4
 7 H        15     4     1     3     0    25  
 8 H        20    18    10     8     0    55.6
 9 K         5     6     3     3     0    50  
10 K        10   161    74    84     3    46.9
11 K        20    13     7     5     1    57.7
12 P         5    41    25    16     0    61.0
13 P        10   133    70    61     2    53.4
14 P        15    11     3     7     1    31.8
15 P        20    15    11     4     0    73.3
16 S        10   200    98    97     5    50.2
17 W        10   200   103    96     1    51.8
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
