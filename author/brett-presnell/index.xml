<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Brett Presnell</title>
    <link>https://presnell.github.io/author/brett-presnell/</link>
      <atom:link href="https://presnell.github.io/author/brett-presnell/index.xml" rel="self" type="application/rss+xml" />
    <description>Brett Presnell</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Wed, 21 Feb 2024 01:12:01 -0500</lastBuildDate>
    <image>
      <url>https://presnell.github.io/images/icon_hu80eeec5b7631200ca7b388ae8cc10e3e_17874_512x512_fill_lanczos_center_2.png</url>
      <title>Brett Presnell</title>
      <link>https://presnell.github.io/author/brett-presnell/</link>
    </image>
    
    <item>
      <title>Response to James Sullivan, UF Strategic Communications &amp; Marketing</title>
      <link>https://presnell.github.io/talk/marchmadness/</link>
      <pubDate>Wed, 21 Feb 2024 01:12:01 -0500</pubDate>
      <guid>https://presnell.github.io/talk/marchmadness/</guid>
      <description>
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Probability of a Perfect Bracket
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
A Primer: The Number of Possible Brackets for an Eight-Team Tournament
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
I think it&amp;#39;s easiest to understand this by first considering a
tournament with only 8 teams (A, B, C, D, E, F, G, H) and hence three
rounds:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;quarterfinals with 4 games (A vs B, C vs D, E vs F, and G vs H)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;semifinals with 2 games (winner of A vs B against winner of C vs D
and winner of E vs F against winner of G vs H)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;final with 1 game (winner of the ABCD group against winner of the EFGH group)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For each game in the quarterfinals, you can choose either of the two
teams, giving you
\[
2 \times 2 \times 2 \times 2 = 2^4 = 16
\]
possible ways to pick the winners of the quarterfinal games (ACEG,
ACEH, ACFG, ACFH, ADEG, ADEH, ADFG, ADFH, BCEG, BCEH, BCFG, BCFH,
BDEG, BDEH, BDFG, and BDFH).&lt;/p&gt;
&lt;p&gt;
No matter which 4 teams you pick to win in the quarterfinals, you can
choose either of 2 teams in each of the 2 semifinal games, so you have
\(2 \times 2 = 2^2 = 4\) possible choices. For example, if you chose
A, C, E, and G to win their quarterfinal games, then your
possibilities would be AE, AG, CE, and CG. But you have 4 possible
choices no matter which of the 16 sets of teams you picked in the
first round, so there are \(16 * 4 = 64\) possible ways to fill out
the first two rounds (quarterfinals and semifinals).&lt;/p&gt;
&lt;p&gt;
No matter which teams you picked to win in the quarterfinals and
semifinals, you can choose either of your two semifinal winners to win
the final game. Thus, no matter which of the 64 possible ways you
chose to fill in the quarterfinal and semifinal rounds, you have 2
possible ways to finish your bracket, leaving you with a total of \(64 *
2 = 128\) possible ways to fill in the complete bracket.&lt;/p&gt;
&lt;p&gt;
Notice that there were 4 games in the first round, 2 games in the second
round, and 1 game in the final round, for a total of 7 games, and the
number of possible brackets turned out to be
\[
2^4 \times 2^2 \times 2^1 = 2^{(4 + 2 + 1)} = 2^7 = 128.
\]&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
So How Many Possible Brackets for the 64 Team NCAA Tournament?
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Now, considering the real March Madness tournament, if we ignore the
play-in games, there are 63 games in the tournament: 32 first round
games, 16 second round games, 8 &lt;em&gt;&amp;#34;Sweet 16&amp;#34;&lt;/em&gt; games, 4 &lt;em&gt;&amp;#34;Elite 8&amp;#34;&lt;/em&gt;
games, 2 &lt;em&gt;&amp;#34;Final Four&amp;#34;&lt;/em&gt; games, and 1 championship game (32 + 16 + 8 +
4 + 2 + 1 = 63). Following the same logic as we did for the eight-team
tournament:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You could pick either of the two teams in each of the 32 first round
games, so altogether there are \(2^{32} = \text{4,294,967,296}\)
possible sets of winners you could pick for the first round.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Similarly, for whatever set of 32 teams you picked to win the first
round games, there are \(2^{16} = \text{65,536}\) different sets of
teams that you could to win their 2nd round games, so by the time
you fill in your teams for the first 2 rounds, you have chosen 1 of
\(2^{32} * 2^{16} = 2^{48} = \text{281,474,976,710,656}\) possibilities.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Continuing in this way, we find that there are
\[
2^{32} * 2^{16} * 2^8 * 2^4 * 2^2 * 2^1 = 2^{63}
\]
possible ways to fill in your bracket.  That&amp;#39;s
\[
2^{63} = \text{9,223,372,036,854,775,808}
\]
or roughly 9 quintillion (a quintillion is a billion billions).&lt;/p&gt;
&lt;p&gt;
So, &lt;strong&gt;&lt;strong&gt;if&lt;/strong&gt;&lt;/strong&gt; you flipped a coin to pick your team in each of the 63
games, meaning that you picked your bracket completely at random from
among the 9 quintillion possibilities, then the probability that you
would pick the perfect bracket for that year&amp;#39;s tournament would be 1
in 9 quintillion.&lt;/p&gt;
&lt;p&gt;
For comparision, the probability that a randomly chosen Floridian
would be killed by lightning in the next year is a little less than 1
in 3 million, so that randomly chosen Floridian has a 3 trillion
(3,000,000,000,000) times greater chance of being killed by lightning
next year than a randomly chosen bracket has of being perfect.&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;However&lt;/strong&gt;&lt;/strong&gt;, and I can&amp;#39;t emphasize this enough, this probability of
choosing a perfect bracket is &lt;strong&gt;&lt;strong&gt;only&lt;/strong&gt;&lt;/strong&gt; correct &lt;strong&gt;&lt;strong&gt;if&lt;/strong&gt;&lt;/strong&gt; you randomly
choose your bracket by flipping a fair coin 63 times. Of course
absolutely &lt;strong&gt;&lt;strong&gt;no one&lt;/strong&gt;&lt;/strong&gt; picks their bracket this way.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
So What&amp;#39;s the Actual Probability of Picking a Perfect Bracket?
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;If&lt;/strong&gt;&lt;/strong&gt; you didn&amp;#39;t have any opinion at all about the relative strengths
of the teams, &lt;strong&gt;&lt;strong&gt;and if&lt;/strong&gt;&lt;/strong&gt; you weren&amp;#39;t concerned about competing with
other bracket pickers for a prize, then it would be much better to
just pick the higher seeded team to win each game, and then pick
whichever of the 1 seeds you prefer in the semifinal and final games
(there are \(2^3 = 8\) ways you could choose the winners of these last
3 games). The probability that the tournament will go completely &amp;#34;by
the chalk&amp;#34; and give you a perfect bracket is still vanishingly small,
but it&amp;#39;s bigger than 1 in 9 quintillion.&lt;/p&gt;
&lt;p&gt;
For example, in 2023, I would have estimated the probability that this
&amp;#34;chalk&amp;#34; method would yield a perfect bracket to be somewhere between 1
in 291 billion and 1 in 84 billion, depending on which teams you chose
to win the final three games. Those are still extremely small
probabilities, and our randomly chosen Floridian is still somewhere
between 25,000 and 93,000 times more likely to die from a lightning
strike this year, but the chalk method is a lot better than flipping
coins.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
Some Other Comments on Perfect Brackets
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-3&#34;&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;headline-6&#34;&gt;
Why You Probably Shouldn&amp;#39;t Choose a Completely by the Chalk Bracket for Your Pool
&lt;/h4&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-4&#34;&gt;
&lt;p&gt;
If you are competing in a bracket pool, then your objective is to
maximize your expected winnings. This is not the same as choosing your
bracket to maximize your chances of being perfect (which is
practically impossible anyway), and it&amp;#39;s not even the same as
maximizing your expected final &amp;#34;score&amp;#34;.  For example, picking the
higher seeded team to win every game is generally not a good strategy,
because lots of other people will do the same, or close to it, so even
if you did win, you would probably split the pot with a lot of other
players.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-7&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;headline-7&#34;&gt;
How Did I Estimate the Probability that a &amp;#34;By the Chalk&amp;#34; Bracket is Perfect?
&lt;/h4&gt;
&lt;div id=&#34;outline-text-headline-7&#34; class=&#34;outline-text-4&#34;&gt;
&lt;p&gt;
If you have a way to estimate the probability that team A wins over
team B in any potential matchup in the tournament, then you can
estimate the probability that a given bracket turns out to be perfect
in a given year. Many of the &amp;#34;power ratings&amp;#34; that are provided by
various sites on the web can be used to estimate the needed
probabilities, although the sites don&amp;#39;t usually tell you how to do
it. For the calculation I did above for the 2023 tournament, I used
the team ratings from FiveThirtyEight.com.  Unfortunately these won&amp;#39;t
be available anymore due to cutbacks at Disney/ABC, so I&amp;#39;ll have to
use something else for 2024.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-8&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;headline-8&#34;&gt;
What About the Play-in Games?
&lt;/h4&gt;
&lt;div id=&#34;outline-text-headline-8&#34; class=&#34;outline-text-4&#34;&gt;
&lt;p&gt;
Note: If you have to pick the 4 play-in games as well, then you have
to pick the winners of 68 games, so in this case there are
\[
2^{67} = \text{147,573,952,589,676,412,928}
\]
possible brackets, and the probability that a bracket chosen by
flipping coins turns out perfect is about 1 in 148 billion billion.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-9&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-9&#34;&gt;
Analyzing the Importance of 3 Additional Basketball Statistics
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-9&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
You said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We’d also give you 3 additional basketball statistics (points per
game, assists per game, win/loss ratio, etc.)  to analyze their
statistical importance (or lack thereof) in determining the winner of
a game.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I&amp;#39;m not sure that I would have the data at hand, or the spare time, to
properly answer this question. Maybe, but given the other things I
need to get done in the meantime, it&amp;#39;s very doubtful.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-10&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-10&#34;&gt;
What&amp;#39;s My Interest in All of This?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-10&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Since at least the early 2000&amp;#39;s I have participated in a small
&amp;#34;portfolio pool&amp;#34; with some other statisticians and computer
scientists, as well as some &amp;#34;civilians&amp;#34;. I started thinking a little
more seriously about it in the 2010&amp;#39;s and around 2016 I got an idea
for how I might optimize my picks for the pool. This led to me
simulating the March Madness tournament on my home computer and using
the outcomes to help me make my selections. My methods have evolved
over the years and these days I run hundreds of thousands, and even
millions of simulations of the tournment to generate training and test
sets for choosing my picks and evaluating how well they are likely to
perform. Almost every year I have ideas for improvements that I
frantically implement and test out at the last minute so that I can
submit my picks before the tournament begins. I have certainly learned
a lot in the process.&lt;/p&gt;
&lt;p&gt;
I know of at least one other pool participant who is doing similar
things: he leads a large-scale optimization research team at Google.
A group of us started comparing ideas a couple of years ago and we
hope at some point to write a paper (or two) about it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Reading Email with Emacs</title>
      <link>https://presnell.github.io/post/email/</link>
      <pubDate>Sun, 09 Oct 2022 16:16:58 -0400</pubDate>
      <guid>https://presnell.github.io/post/email/</guid>
      <description>
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Background
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
I&amp;#39;ve been reading and sending email with GNU Emacs since about 1991.
In that time I have used at least five different emacs email clients:
&lt;code class=&#34;verbatim&#34;&gt;MH-E&lt;/code&gt;, &lt;code class=&#34;verbatim&#34;&gt;VM&lt;/code&gt;, &lt;code class=&#34;verbatim&#34;&gt;Mew&lt;/code&gt;, &lt;code class=&#34;verbatim&#34;&gt;gnus&lt;/code&gt;, and now &lt;code class=&#34;verbatim&#34;&gt;mu4e&lt;/code&gt;.  I have also adapted to
many different email server setups, and I have helped many of my
current and especially my former colleagues do the same.&lt;/p&gt;
&lt;p&gt;
Some years ago now our departmental email server was shut down and our
email moved to a Microsoft Exchange server.  The Exchange IMAP server
(used for reading email) in conjunction with &lt;code class=&#34;verbatim&#34;&gt;gnus&lt;/code&gt; was so slow that
it was unusable, so I switched to a combination of the &lt;code class=&#34;verbatim&#34;&gt;mu4e&lt;/code&gt; emacs
client with a local maildir store kept in sync with the server by
&lt;code class=&#34;verbatim&#34;&gt;offlineimap&lt;/code&gt;.  I was serving as department chair at the time and the
super fast search provided by &lt;code class=&#34;verbatim&#34;&gt;mu&lt;/code&gt; was really nice to have with all
the email that comes with that position.&lt;/p&gt;
&lt;p&gt;
A few years ago the university decided to completely outsource its
email services to Microsoft, so I configured offlineimap to retrieve
my email from &lt;code class=&#34;verbatim&#34;&gt;outlook.office365.com&lt;/code&gt;.  This posed no problems until
recently, when Microsoft deprecated the “Basic Auth” protocol for
checking email in favor of “Modern Auth” (oath2) and I was once again
forced lose a long weekend adapting to a new email setup.&lt;/p&gt;
&lt;p&gt;
I admit that I am trying to do all this while minimizing the number of
things that I actually have to understand about how any of these
protocols work.  I spent way too much of my earlier life setting up
departmental email servers and clients before finally swearing off
ever doing that again, and I have spent a great deal of time in the
intervening years adapting to changing email environments and helping
colleagues to do the same.  At this point in my life I am completely
uninterested in how any of this works beyond what is absolutely
required for me to use it — I just want to continue to read and
write work email in the same development environment (emacs) that I
use for everything else.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Slightly More Technical Background
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
There are two parts to this problem: retrieving and syncing email with
Microsoft&amp;#39;s IMAP server, which I have been doing with offlineimap; and
sending email messages via Microsoft&amp;#39;s SMTP (Symmetric Mail Transport
Protocol) server, which I have been doing for many years with emacs&amp;#39;s
built-in sendmail code.  There do exist emacs packages named oauth2,
auth-source-xoauth2, and oauth2-request, but I didn&amp;#39;t get very far
with any of them and they wouldn&amp;#39;t help me on the IMAP side, because I
use an external program (offlineimap) for that interaction (and having
become used to &lt;code class=&#34;verbatim&#34;&gt;mu4e&lt;/code&gt; I&amp;#39;m not going back to &lt;code class=&#34;verbatim&#34;&gt;gnus&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;
So, I needed (1) to find another way to send email that works with
oauth2, and (2) to either configure offlineimap to work with oauth2 or
find another program to handle interactions with the IMAP server.  For
sending email messages, the most commonly used sendmail replacement
seems to be &lt;code class=&#34;verbatim&#34;&gt;msmtp&lt;/code&gt;, so I planned to use that, assuming that I could
configure it to use oauth2. (If you don&amp;#39;t know, the actual sending of
messages is traditionally handled separately from reading and managing
messages and folders.)&lt;/p&gt;
&lt;p&gt;
BTW, to retrieve/sync and send email via Microsofts servers with
oauth2, one must have a registered &amp;#34;client app&amp;#34;.  There is a mechanism
for registering such an app with Microsoft Azure (whatever that is),
but this failed for me because my institution does not allow me (or
anyone?) to register a new app.  This means that I must do what
everyone else apparently does, which is to use the client ID and
secret for Mozilla&amp;#39;s Thunderbird email client (there&amp;#39;s actually
nothing secret about these and you will see them below).&lt;/p&gt;
&lt;p&gt;
Early on in my search for a solution, I tried &lt;a href=&#34;https://github.com/UvA-FNWI/M365-IMAP&#34;&gt;M365-IMAP&lt;/a&gt; (python) to
handle the authentication. I was able to make it work with
&lt;code class=&#34;verbatim&#34;&gt;offlineimap&lt;/code&gt;, but the authorization token or tokens have to be
updated periodically (every hour or so?). I also don&amp;#39;t want to be
storing them in a clear text file, so the barebones usage outlined
there won&amp;#39;t work for me.  Still, at a minimum, this is a good way to
retrieve some actual authentication tokens to experiment with.&lt;/p&gt;
&lt;p&gt;
I also tried &lt;code class=&#34;verbatim&#34;&gt;mailctl&lt;/code&gt; and I got it to work with &lt;code class=&#34;verbatim&#34;&gt;msmtp&lt;/code&gt; but not with
&lt;code class=&#34;verbatim&#34;&gt;offlineimap&lt;/code&gt;.  I tried another method, but the initial authentication
step (which uses a browser) wouldn&amp;#39;t work for me because all the
graphics (buttons) for my institutions login page didn&amp;#39;t show up,
leaving me unable to complete the 2-factor authentication. (I think I
was trying either &lt;a href=&#34;https://github.com/simonrob/email-oauth2-proxy&#34;&gt;email-oauth2-proxy&lt;/a&gt; or &lt;a href=&#34;https://github.com/ahrex/oauth-helper-office-365&#34;&gt;oauth-helper-office-365&lt;/a&gt; when I
ran into this problem.)&lt;/p&gt;
&lt;p&gt;
I finally came across Larie Tratt&amp;#39;s &lt;a href=&#34;https://tratt.net/laurie/blog/2022/pizauth_oauth_authenticator_alpha.html&#34;&gt;pizauth&lt;/a&gt; and this actually seems to
work for me and takes care of any worries about storing any
authentication details on disk.  However, I didn&amp;#39;t manage to get it
working with &lt;code class=&#34;verbatim&#34;&gt;offlineimap&lt;/code&gt; (I&amp;#39;m sure that&amp;#39;s on me), so I decided to
switch over to &lt;code class=&#34;verbatim&#34;&gt;isync/mbsync&lt;/code&gt;, which I was already aware of as a
faster alternative to &lt;code class=&#34;verbatim&#34;&gt;offlineimap&lt;/code&gt;.  The rest of this describes the
process of getting this working on Ubuntu 22.04 (LTS), a.k.a., &amp;#34;Ubuntu
Jammy&amp;#34;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Setting Up &lt;code class=&#34;verbatim&#34;&gt;pizauth&lt;/code&gt;
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
First we need a Rust compiler.  For this, just go to the &lt;a href=&#34;https://www.rust-lang.org/learn/get-started&#34;&gt;Getting
Started&lt;/a&gt; page for rust and follow the instructions to use the Rustup
tool to install Rust.  This will install a personal copy of rust in
your home directory (as opposed to a system-wide installation).  Then
add the following lines to your &lt;code class=&#34;verbatim&#34;&gt;~/.profile&lt;/code&gt; (or wherever you keep
your shell startup stuff):&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;source ~/.cargo/env&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
You may need to reload your &lt;code class=&#34;verbatim&#34;&gt;.profile&lt;/code&gt; (or your &lt;code class=&#34;verbatim&#34;&gt;.bashrc&lt;/code&gt;) or just
log out and log back in again to get the rust compiler on your path.&lt;/p&gt;
&lt;p&gt;
Next download &lt;code class=&#34;verbatim&#34;&gt;pizauth&lt;/code&gt; either from &lt;a href=&#34;https://tratt.net/laurie/src/pizauth/&#34;&gt;Laurie Tratt&amp;#39;s web pages&lt;/a&gt;
or from the &lt;a href=&#34;https://github.com/ltratt/pizauth/&#34;&gt;Github repository&lt;/a&gt; and untar/unzip it if necessary. I was
able to compile the program with &lt;code class=&#34;verbatim&#34;&gt;make&lt;/code&gt; but &lt;code class=&#34;verbatim&#34;&gt;sudo make install&lt;/code&gt; failed
because &lt;code class=&#34;verbatim&#34;&gt;sudo&lt;/code&gt; doesn&amp;#39;t have the Rust compiler on it&amp;#39;s path.  To fix
this, I edited the &lt;code class=&#34;verbatim&#34;&gt;Makefile&lt;/code&gt; and changed these lines&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
install:
	cargo build --release
	install -d ${PREFIX}/bin
	...
&lt;/pre&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
install:
	# cargo build --release
	install -d ${PREFIX}/bin
        ...
&lt;/pre&gt;
&lt;p&gt;This works becuase the &lt;code class=&#34;verbatim&#34;&gt;cargo build --release&lt;/code&gt; step is already done
when you run &lt;code class=&#34;verbatim&#34;&gt;make&lt;/code&gt; (without &lt;code class=&#34;verbatim&#34;&gt;sudo&lt;/code&gt;) to compile the program, so it can
safely be left out of the installation step.  (For reference, &lt;code class=&#34;verbatim&#34;&gt;cargo&lt;/code&gt;
is the Rust package manager.)&lt;/p&gt;
&lt;p&gt;
So again, after this edit, just run the following commands to compile
&lt;code class=&#34;verbatim&#34;&gt;pizauth&lt;/code&gt; and install it in &lt;code class=&#34;verbatim&#34;&gt;/usr/local&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  cd pizauth-0.1.0
  make
  sudo make install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I next created the file &lt;code class=&#34;verbatim&#34;&gt;~/.config/pizauth.conf&lt;/code&gt;, whose contents are
given below.  The &lt;code class=&#34;verbatim&#34;&gt;client_id&lt;/code&gt; and &lt;code class=&#34;verbatim&#34;&gt;client_secret&lt;/code&gt; are actually for
thunderbird, but this works.  For your own use you may want to change
&lt;code class=&#34;verbatim&#34;&gt;&amp;#34;UF&amp;#34;&lt;/code&gt; to something else (e.g., &lt;code class=&#34;verbatim&#34;&gt;&amp;#34;work&amp;#34;&lt;/code&gt;) and you will have to replace
my email address with your own on the &lt;code class=&#34;verbatim&#34;&gt;login_hint&lt;/code&gt; line.&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
account &amp;#34;UF&amp;#34; {
    auth_uri = &amp;#34;https://login.microsoftonline.com/common/oauth2/v2.0/authorize&amp;#34;;
    token_uri = &amp;#34;https://login.microsoftonline.com/common/oauth2/v2.0/token&amp;#34;;
    client_id = &amp;#34;08162f7c-0fd2-4200-a84a-f25a4db0b584&amp;#34;;
    client_secret = &amp;#34;TxRBilcHdC6WGBee]fs?QR:SJ8nI[g82&amp;#34;;
    scopes = [
      &amp;#34;https://outlook.office365.com/IMAP.AccessAsUser.All&amp;#34;,
      &amp;#34;https://outlook.office365.com/SMTP.Send&amp;#34;,
      &amp;#34;offline_access&amp;#34;
    ];
    // You don&amp;#39;t have to specify login_hint, but it does make
    // authentication a little easier.
    login_hint = &amp;#34;presnell@ufl.edu&amp;#34;;
}
&lt;/pre&gt;
&lt;p&gt;
Next run&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  pizauth server&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You shouldn&amp;#39;t see any output from this.  Assuming that all has gone
well to here, run (again, change &lt;code class=&#34;verbatim&#34;&gt;UF&lt;/code&gt; to whatever you used for the
account name in your &lt;code class=&#34;verbatim&#34;&gt;pizauth.conf&lt;/code&gt; file.&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  pizauth show UF&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The first time you do this a URL will be output.  Copy this URL and
open it in your browser and do whatever is needed to authenticate with
your institution (if your browser is already authenticated, you may
not have to do anything but open the URL).  To see if this worked, run
&lt;code class=&#34;verbatim&#34;&gt;pizauth show UF&lt;/code&gt; again and you should see the access token obtained.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Installing and Configuring &lt;code class=&#34;verbatim&#34;&gt;msmtp&lt;/code&gt;
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
This one is easy to install:&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  sudo apt install msmtp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Next create the file &lt;code class=&#34;verbatim&#34;&gt;~/.msmtprc&lt;/code&gt; with the following contents, which
again will need to be modified to match your situation.&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
  ## UF email via office365 (Microsoft)
  account UF
  auth    xoauth2
  host    smtp.office365.com
  protocol smtp
  port    587
  tls     on
  tls_starttls on
  from    presnell@ufl.edu
  user    presnell@ufl.edu
  passwordeval pizauth show UF
&lt;/pre&gt;
&lt;p&gt;
At this stage you can test that sending email is working by running
something like:&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Subject: Test\n\nHello there me.&amp;#34;&lt;/span&gt; | msmtp -a UF your_personal_account@gmail.com&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;and checking that the mail is received at your personal account.&lt;/p&gt;
&lt;p&gt;
An error similar to this:&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
sh: 1: pizauth: Permission denied
msmtp: cannot read output of &amp;#39;pizauth show UF&amp;#39;
&lt;/pre&gt;
&lt;p&gt;probably indicates that your OS (Ubuntu for me) has put some overly
restrictive apparmor conditions on msmtp.  You can fix this by
disabling apparmor for msmtp like this:&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  sudo ln -s /etc/apparmor.d/usr.bin.msmtp /etc/apparmor.d/disable/
  sudo apparmor_parser -R /etc/apparmor.d/usr.bin.msmtp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Installing and Configuring &lt;code class=&#34;verbatim&#34;&gt;isync/mbsync&lt;/code&gt;
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Again, installion of the &lt;code class=&#34;verbatim&#34;&gt;isync&lt;/code&gt; package is routine.&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  sudo apt install isync&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
To use &lt;code class=&#34;verbatim&#34;&gt;mbsync&lt;/code&gt; with oauth2, you also need to install an xoauth2
plugin for SASL (Simple Authentication and Security Layer).  There are
several available, and I first tried the &lt;a href=&#34;https://launchpad.net/~sasl-xoauth2/+archive/ubuntu/stable&#34;&gt;ppa&lt;/a&gt; on &lt;a href=&#34;https://launchpad.net/&#34;&gt;Cononical&amp;#39;s Launchpad&lt;/a&gt;,
but it did not work for me.  The most commonly used plugin seems to be
&lt;a href=&#34;https://github.com/moriyoshi/cyrus-sasl-xoauth2&#34;&gt;this one&lt;/a&gt; (I think that it is used in Arch linux and in Free BSD). To
install it, I followed the instructions in the Install Cyrus SASL
OAuth2 section of &lt;a href=&#34;https://unix.stackexchange.com/questions/625637/configuring-mbsync-with-authmech-xoauth2&#34;&gt;this page&lt;/a&gt;.  As prerequisites, you need to install
that &lt;code class=&#34;verbatim&#34;&gt;libsasl2-dev&lt;/code&gt; package and if you want to do the last step
(verifying that XOATH2 is known to SASL probably isn&amp;#39;t necessary), you
will also need to install the &lt;code class=&#34;verbatim&#34;&gt;sasl2-bin&lt;/code&gt; package to get the
&lt;code class=&#34;verbatim&#34;&gt;saslpluginviewer&lt;/code&gt; command:&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  sudo apt install libsasl2-dev sasl2-bin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After this just follow the instructions mentioned above, i.e.,&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Clone the Cyrus SASL OAuth2 sources.&lt;/span&gt;
  git clone https://github.com/moriyoshi/cyrus-sasl-xoauth2.git

  &lt;span style=&#34;color:#75715e&#34;&gt;# Configure and make.&lt;/span&gt;
  cd cyrus-sasl-xoauth2
  ./autogen.sh
  ./configure

  &lt;span style=&#34;color:#75715e&#34;&gt;# SASL2 libraries on Ubuntu are in /usr/lib/x86_64-linux-gnu/; modify the Makefile accordingly&lt;/span&gt;
  sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s%pkglibdir = ${CYRUS_SASL_PREFIX}/lib/sasl2%pkglibdir = ${CYRUS_SASL_PREFIX}/lib/x86_64-linux-gnu/sasl2%&amp;#39;&lt;/span&gt; Makefile

  make
  sudo make install

  &lt;span style=&#34;color:#75715e&#34;&gt;# Verify XOAUTH2 is known to SASL.&lt;/span&gt;
  saslpluginviewer | grep XOAUTH2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Finally, I created a &lt;code class=&#34;verbatim&#34;&gt;~/.mbsyncrc&lt;/code&gt; file with the contents below.  By
default Outlook creates and syncs a bunch of folders that I don&amp;#39;t use.
I basically keep everything in INBOX and Archive and use &lt;code class=&#34;verbatim&#34;&gt;mu&lt;/code&gt; to find
things quickly, so it&amp;#39;s easiest for me to just list the folders that I
want in the &lt;code class=&#34;verbatim&#34;&gt;Patterns&lt;/code&gt; line.  If you create a lot of folders for your
email, then it might be easier to say what you don&amp;#39;t want (there are
examples online of how to do this), or just use &lt;code class=&#34;verbatim&#34;&gt;*&lt;/code&gt; and download
everything.&lt;/p&gt;
&lt;p&gt;
Also, for initial testing, the RECOMMENDATIONS section of
the
&lt;code class=&#34;verbatim&#34;&gt;[[https://manpages.ubuntu.com/manpages/jammy/man1/mbsync.1.html][mbsync man page]]&lt;/code&gt;
recommends leaving &lt;code class=&#34;verbatim&#34;&gt;Expunge None&lt;/code&gt; (the default) to make
sure you don&amp;#39;t lose mail if anything goes awry.&lt;/p&gt;
&lt;p&gt;
Finally, I set &lt;code class=&#34;verbatim&#34;&gt;Create Near&lt;/code&gt; so that folders (mailboxes) would be
created on the local side when I initially sync things up, but I don&amp;#39;t
really want to create any new folders on either end.  You might prefer
&lt;code class=&#34;verbatim&#34;&gt;Create Both&lt;/code&gt;, which I assume is a lot more common.&lt;/p&gt;
&lt;p&gt;
Note that a &amp;#34;Channel&amp;#34; in &lt;code class=&#34;verbatim&#34;&gt;mbsync&lt;/code&gt; combines a &lt;code class=&#34;verbatim&#34;&gt;Far&lt;/code&gt; with a &lt;code class=&#34;verbatim&#34;&gt;Near&lt;/code&gt;
store; in this case the &lt;code class=&#34;verbatim&#34;&gt;UF&lt;/code&gt; channel combines &lt;code class=&#34;verbatim&#34;&gt;UFRemote&lt;/code&gt; and
&lt;code class=&#34;verbatim&#34;&gt;UFLocal&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
  IMAPAccount UF
  Host outlook.office365.com
  User presnell@ufl.edu
  Port 993
  SSLType IMAPS
  SSLVersions TLSv1.1 TLSv1.2
  AuthMechs XOAUTH2
  PassCmd &amp;#34;pizauth show UF&amp;#34;

  IMAPStore UFRemote
  Account UF

  MailDirStore UFLocal
  Path ~/Maildir/UF/
  Inbox ~/Maildir/UF/INBOX
  Subfolders Verbatim

  Channel UF
  Far :UFRemote:
  Near :UFLocal:
  SyncState *
  ## I only want these 5 folders:
  Patterns &amp;#34;INBOX&amp;#34; &amp;#34;Archive&amp;#34; &amp;#34;Drafts&amp;#34; &amp;#34;Sent Items&amp;#34; &amp;#34;Deleted Items&amp;#34;
  ## You can sync EVERYTHING by using this line instead:
  ## Patterns *
  Create Near
  Expunge Both
&lt;/pre&gt;
&lt;p&gt;
I also had to manually create the &lt;code class=&#34;verbatim&#34;&gt;~Maildir/UF&lt;/code&gt; directory.  You
probably don&amp;#39;t want that to be readable by anyone but you either, so
set the permissions accordingly.&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  mkdir -p ~/Maildir/UF
  chmod -R go-rwx ~/Maildir&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Finally, test by running the following command.  It will take a while
the first time to download all your email.&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  mbsync UF&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
Socket error: unexpected eof
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
I consistently get the following error message when I run &lt;code class=&#34;verbatim&#34;&gt;mbsync UF&lt;/code&gt;,
but the error doesn&amp;#39;t seem to cause any problems.&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
Socket error: secure read from outlook.office365.com (52.96.29.82:993): error:0A000126:SSL routines::unexpected eof while reading
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-7&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-7&#34;&gt;
Duplicate messages
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-7&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
&lt;a href=&#34;http://tiborsimko.org/mbsync-duplicate-uid.html&#34;&gt;This post&lt;/a&gt; may be useful for diagnosing and fixing duplicate message
errors from &lt;code class=&#34;verbatim&#34;&gt;mbsync&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-8&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-8&#34;&gt;
Installing &lt;code class=&#34;verbatim&#34;&gt;mu&lt;/code&gt; and &lt;code class=&#34;verbatim&#34;&gt;mu4e&lt;/code&gt;
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-8&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
I&amp;#39;m going to install the latest version of &lt;code class=&#34;verbatim&#34;&gt;mu&lt;/code&gt; and &lt;code class=&#34;verbatim&#34;&gt;mu4e&lt;/code&gt; from
github.  If you&amp;#39;re happy with an older version, you can install the
Ubuntu package &lt;code class=&#34;verbatim&#34;&gt;maildir-utils&lt;/code&gt; with apt.&lt;/p&gt;
&lt;p&gt;
It might be a good idea to clear out any existing mu and mu4e
installations if you have used them before, e.g., with &lt;code class=&#34;verbatim&#34;&gt;sudo apt purge
maildir-utils&lt;/code&gt;.  I had installed them manually from source, so I did
something like this:&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  sudo rm /usr/local/bin/mu
  sudo rm -r /usr/local/share/emacs/site-lisp/mu4e
  sudo rm -r /usr/local/share/man/man*/mu-*
  sudo rm /usr/local/share/man1/mu.1
  sudo rm /usr/local/share/man1/mug.1
  sudo rm -r /usr/local/share/doc/mu&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Make sure these prerequisite libraries are installed.  Add &lt;code class=&#34;verbatim&#34;&gt;emacs&lt;/code&gt; to
the list of packages if you don&amp;#39;t already have it (I use
&lt;code class=&#34;verbatim&#34;&gt;emacs-snapshot&lt;/code&gt; from a ppa so I&amp;#39;m not including that here).&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  sudo apt install libgmime-3.0-dev libxapian-dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Next install the meson build system.&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  sudo apt install meson ninja-build&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Now we can download the &lt;a href=&#34;https://github.com/djcb/mu/releases&#34;&gt;most recent release of mu&lt;/a&gt; (currently 1.8.10)
and install as below.  It is possible that there are prerequisite
packages that need to be installed with &lt;code class=&#34;verbatim&#34;&gt;apt&lt;/code&gt;, but if so, I seem to
have all of them already installed from previous installations of mu.&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  cd ~/Download
  tar -xf mu-1.8.10.tar.xz
  cd mu-1.8.10
  meson build &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ninja -C build
  sudo ninja -C build install   &lt;span style=&#34;color:#75715e&#34;&gt;# By default this will install into /usr/local&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
To index your mail, just run:&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
mu init --maildir=~/Maildir --my-address=presnell@ufl.edu --my-address=presnell@stat.ufl.edu
mu info  # Checking everything is correct
mu index
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-9&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-9&#34;&gt;
Configuring &lt;code class=&#34;verbatim&#34;&gt;mu4e&lt;/code&gt;
&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-10&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-10&#34;&gt;
Further Notes
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-10&#34; class=&#34;outline-text-2&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It looks like this person &lt;a href=&#34;https://sites.uw.edu/bxf4/2022/09/01/getting-uw-outlook-365-oauth2-to-work-with-emacs-mu4e-mbsync-and-msmtp/&#34;&gt;had a similar ordeal&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-11&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-11&#34;&gt;
My comments for Laurie Tratt&amp;#39;s blog post on pizauth:
&lt;/h3&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Works for me! Thanks so much for this. I lost access to my work email last week when MS turned off basic authentication.  After I had struggled to arrive at an acceptable (no tokens stored in unencrypted files) and complete (IMAP and SMTP both working smoothly) solution with any of the other options I came across, pizauth saved the day. I had been using offlineimap + mu + mu4e and emacs&amp;#39;s built-in sendmail stuff. I ended up with pizauth + mbsync + msmtp + mu + mu4e, but it&amp;#39;s working, so I&amp;#39;m happy.&lt;/p&gt;
&lt;p&gt;
A few comments:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;I have rust installed via rustup (so in my home directory) and on my linux box (Ubuntu 22.04) I couldn&amp;#39;t get sudo to use it for &amp;#34;sudo make install&amp;#34;, so I commented the &amp;#34;cargo build –release&amp;#34; step out of the install recipe in the Makefile.  With that change  &amp;#34;make; sudo make install&amp;#34; worked without a hitch.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;My institution does not allow me to register a new application with Azure, so I&amp;#39;m just using the client id and secret for thunderbird, which I assume is what most people are doing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Offlineimap will work with OAuth2 (I verified this by generating access and renew tokens and manually entering them into my .offlineimaprc file). I think that it should work with pizauth (by calling pizauth in a manner similar to this (&lt;a href=&#34;https://wiki.archlinux.org/title/OfflineIMAP#Configuring_OAuth2_and_getting_access_tokens_via_mailctl)&#34;&gt;https://wiki.archlinux.org/title/OfflineIMAP#Configuring_OAuth2_and_getting_access_tokens_via_mailctl)&lt;/a&gt; or this (&lt;a href=&#34;https://www.macs.hw.ac.uk/~rs46/posts/2022-01-11-mu4e-oauth.html)&#34;&gt;https://www.macs.hw.ac.uk/~rs46/posts/2022-01-11-mu4e-oauth.html)&lt;/a&gt; but somehow I failed to get it to work. FWIW, I thought that offlineimap needed both an access token and a renewal token, and assuming that both would eventually expire if not used, I don&amp;#39;t see how to get the refresh token from pizauth.&lt;/p&gt;
&lt;p&gt;
Today I noticed that offlineimap also has built-in functionality for renewing OAuth2 tokens (&lt;a href=&#34;https://gist.github.com/piyueh/a2d65e095ea675a2c715ad42b7b61d10).&#34;&gt;https://gist.github.com/piyueh/a2d65e095ea675a2c715ad42b7b61d10).&lt;/a&gt;  I didn&amp;#39;t realize this, so I may have misunderstood some of the configuration advice that I encountered elsewhere.  I certainly would have continued with offlineimap if I had managed to get everything working properly, but mbsync does seem to be a bit faster, so there&amp;#39;s that I guess.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R Tips and Tricks</title>
      <link>https://presnell.github.io/post/r/</link>
      <pubDate>Thu, 16 Jun 2022 10:40:03 -0500</pubDate>
      <guid>https://presnell.github.io/post/r/</guid>
      <description>
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Data Manipulation
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Mainly I&amp;#39;m trying to record tidyverse ways of doing things.  Usually I
know how to do them in base-R.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
Selecting All Columns of a Given Type
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
This can be useful when you have lots of columns and want to just look
at a certain type.  Pipe it into `names()` to just get the names of
the columns.&lt;/p&gt;
&lt;div class=&#34;src src-r&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;(swiss)
  swiss &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as_tibble&lt;/span&gt;(swiss)
  swiss &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;where&lt;/span&gt;(is.double))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
A base-R version would be something like:&lt;/p&gt;
&lt;div class=&#34;src src-r&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;(swiss)
  swiss[, &lt;span style=&#34;color:#a6e22e&#34;&gt;sapply&lt;/span&gt;(swiss, is.double)]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Graphics
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
Side-by-Side Histograms Before and After Log Transformation
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Here&amp;#39;s a quick and easy way to visually compare histograms of a
variable before and after a log transformation.  For easy repetition,
you can string the last 4 lines together with `;` to create a
one-liner, or better, turn them into a simple function.  (I&amp;#39;m not sure
of the relative strengths and weaknesses of the cowplot and patchwork
packages, so I&amp;#39;ve included examples with both. See &lt;a href=&#34;https://stackoverflow.com/questions/1249548/side-by-side-plots-with-ggplot2&#34;&gt;this stackoverflow
question&lt;/a&gt; for other approaches.)&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;headline-5&#34;&gt;
Using the cowplot package:
&lt;/h4&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-4&#34;&gt;
&lt;div class=&#34;src src-r&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(cowplot)
  p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(hcvvt, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; my_variable))
  p1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_histogram&lt;/span&gt;()
  p2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; p1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_x_log10&lt;/span&gt;()
  &lt;span style=&#34;color:#a6e22e&#34;&gt;plot_grid&lt;/span&gt;(p1, p2)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;headline-6&#34;&gt;
Using the patchwork package:
&lt;/h4&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-4&#34;&gt;
&lt;div class=&#34;src src-r&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(patchwork)
  p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(hcvvt, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; my_variable))
  p1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_histogram&lt;/span&gt;()
  p2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; p1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_x_log10&lt;/span&gt;()
  p1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; p2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R Package icda</title>
      <link>https://presnell.github.io/post/icda/</link>
      <pubDate>Wed, 04 May 2022 10:43:16 -0400</pubDate>
      <guid>https://presnell.github.io/post/icda/</guid>
      <description>
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
What Is This About?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Years ago, while teaching our undergraduate categorical data analysis
course, I created a small R package consisting mainly of datasets from
the text &lt;em&gt;An Introduction to Categorical Data Analysis&lt;/em&gt; (2nd edn) by
my colleague Alan Agresti, along with a few convenience functions.  My
primary goal was to make it easy for my students to get started on the
examples and exercises, so the help files for each dataset included
fairly detailed R code and in my mind this is really the the main
feature of the package.&lt;/p&gt;
&lt;p&gt;
Unfortunately, I haven&amp;#39;t taught the course over a decade, so I have
not been actively maintaining the package and by now there is a newer
edition of the text and probably several other associated R packages.
Nevertheless, I still occassionally get requests for the package and I
put it on github a while back to make it more easily available.  So,
if you landed on my web pages while looking for the &lt;code class=&#34;verbatim&#34;&gt;icda&lt;/code&gt; package,
you can install it in R with the following sequence of commands:&lt;/p&gt;
&lt;div class=&#34;src src-r&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;install.packages&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;devtools&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(devtools)
&lt;span style=&#34;color:#a6e22e&#34;&gt;install_github&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;presnell/icda&amp;#34;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
And here are &lt;a href=&#34;files/icda-notes.pdf&#34;&gt;my old class notes&lt;/a&gt; and the &lt;a href=&#34;files/icda-notes.R&#34;&gt;tangled R code&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>U-Statistics and Imperfect Ranking in Ranked Set Sampling</title>
      <link>https://presnell.github.io/post/rankedsetsampling/</link>
      <pubDate>Mon, 09 Nov 2020 17:38:21 -0500</pubDate>
      <guid>https://presnell.github.io/post/rankedsetsampling/</guid>
      <description>
&lt;p&gt;
Once upon a time I did a little work on ranked set sampling with my
former colleague Lora Bohn, work which was eventually published in the
&lt;em&gt;Journal of Nonparametric Statistics&lt;/em&gt;.  The examples and
counterexamples in the paper required some fairly routine calculations
that we did not include, but we promised to make them available upon
request.  Someone recently asked for them for the first time in at
least a few years, so I decided to make them available &lt;a href=&#34;files/URSS-details.pdf&#34;&gt;here&lt;/a&gt; so that
they can be found by others.  Of course, if you find them useful I
would be pleased to hear about it.&lt;/p&gt;
&lt;p&gt;
My only other comment is that these details, and especially the
comments therein, will not make much sense if you don&amp;#39;t read the
&lt;a href=&#34;https://amstat.tandfonline.com/doi/abs/10.1080/10485259908832756&#34;&gt;original, extremely enlightening paper&lt;/a&gt;. 😄&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting R&#39;s Library Path on UF Classroom PCs</title>
      <link>https://presnell.github.io/post/classroomr/</link>
      <pubDate>Sat, 08 Aug 2020 10:49:00 -0400</pubDate>
      <guid>https://presnell.github.io/post/classroomr/</guid>
      <description>
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
What Is This About?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
After a very long hiatus from needing to run R in the classrooms, I am
back at it.  The classroom (Windows 10) PCs at UF are refreshed every
night and all local files created by users are wiped.  By default, R
packages installed by users are placed in &lt;code class=&#34;verbatim&#34;&gt;C:/Program
Files/R/R-3.5.2/library&lt;/code&gt;,&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; and like everything else that users
create, they are wiped every night. Thus, if you accept the default
behavior, you have to resintall any packages you need every time you
need them.&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-2&#34; href=&#34;#footnote-2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; This has been the source of some frustration for me
and at least one of my colleagues, so I decided to do something about
it.  This post describes my current (partial) solution, which I think
should also be useful for folks running R or RStudio on a desktop PC
in their office (in my department at UF anyway).  It&amp;#39;s nothing fancy,
and if someone has a better solution I would be happy to hear about
it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
My Solution
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Download &lt;a href=&#34;files/.Rprofile&#34;&gt;this file&lt;/a&gt; and save it under the name &lt;code class=&#34;verbatim&#34;&gt;.Rprofile&lt;/code&gt; in your home
directory on the departmental file server (so &lt;code class=&#34;verbatim&#34;&gt;~/.Rprofile&lt;/code&gt; in linux
and &lt;code class=&#34;verbatim&#34;&gt;H:/.Rprofile&lt;/code&gt; in Windows), or use a text editor to create the
file yourself with with the following contents:&lt;/p&gt;
&lt;div class=&#34;src src-r&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;grepl&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Windows&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.info&lt;/span&gt;()[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sysname&amp;#34;&lt;/span&gt;])) {
    my.lib.path &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;file.path&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;H:&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;R&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;win-library&amp;#34;&lt;/span&gt;,
                             &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(R.version&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;major,
                                   &lt;span style=&#34;color:#a6e22e&#34;&gt;sub&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\..*$&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, R.version&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;minor),
                                   sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;))
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dir.exists&lt;/span&gt;(my.lib.path)) &lt;span style=&#34;color:#a6e22e&#34;&gt;dir.create&lt;/span&gt;(my.lib.path, recursive &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
    &lt;span style=&#34;color:#a6e22e&#34;&gt;.libPaths&lt;/span&gt;(my.lib.path)
    &lt;span style=&#34;color:#a6e22e&#34;&gt;rm&lt;/span&gt;(my.lib.path)
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Now, whenever you start R in the classroom, run the command&lt;/p&gt;
&lt;div class=&#34;src src-r&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;source&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;H:/.Rprofile&amp;#34;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This first checks that you are running R in Windows. If so, then it
checks for the existence of the directory &lt;code class=&#34;verbatim&#34;&gt;H:/R/win-library/X.Y&lt;/code&gt;,
where &lt;code class=&#34;verbatim&#34;&gt;X&lt;/code&gt; is the major version number and &lt;code class=&#34;verbatim&#34;&gt;Y&lt;/code&gt; is the minor version of
the current R process, and it creates this directory if it doesn&amp;#39;t
already exist.  It then adds this directory to the front of R&amp;#39;s
library path so that (1) R will look for packages there before trying
the system packages, and (2) R will install any new packages into this
directory rather than the system directory.&lt;/p&gt;
&lt;p&gt;
If anything about that is not ok with you, then you will need to
modify &lt;code class=&#34;verbatim&#34;&gt;.Rprofile&lt;/code&gt; to suit your specific needs.  If you already have a
directory of installed R packages, you can either move/rename it to
match this scheme, or you can modify the script to match, assuming
that your directory is on your &lt;code class=&#34;verbatim&#34;&gt;H:&lt;/code&gt; drive.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
If You Run R in Windows in Your Office 
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
If you place a copy of this &lt;code class=&#34;verbatim&#34;&gt;.Rprofile&lt;/code&gt; file in whatever directory is
returned by the R command &lt;code class=&#34;verbatim&#34;&gt;path.expand(&amp;#39;~&amp;#39;)&lt;/code&gt; (probably
&lt;code class=&#34;verbatim&#34;&gt;C:/Users/&amp;lt;yourusername&amp;gt;/Documents&lt;/code&gt;), then R will run it automatically
upon startup (on your office PC) and any libraries you install in your
office will be saved to your &lt;code class=&#34;verbatim&#34;&gt;H:&lt;/code&gt; drive.  Also, as long as your office
PC and the classroom PCs are running the same version of R, they will
share the same set of user-installed R packages.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Further Background and Explanation
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
You can skip this if you like …&lt;/p&gt;
&lt;p&gt;
When I login to a classroom machine, my home directory from the
departmental (virtual) file server is mounted as the &lt;code class=&#34;verbatim&#34;&gt;H:&lt;/code&gt; drive in
Windows.  So, to sidestep the problem of repeatedly installing
packages, I initially created the folder &lt;code class=&#34;verbatim&#34;&gt;R/win-library/3.5&lt;/code&gt;&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-3&#34; href=&#34;#footnote-3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; in my
home directory on the file server, and in the classroom, I just ran
the R command &lt;code class=&#34;verbatim&#34;&gt;.libPaths(&amp;#34;H:/R/win-library/3.5&amp;#34;)&lt;/code&gt; immediately after
starting R (or RStudio).  With this, any libraries I install are saved
on the departmental file server and they are found again the next time
I teach (once I have run that command).&lt;/p&gt;
&lt;p&gt;
Of course this is still pretty annoying and I wanted to arrange things
so that it would be done automatically by an &lt;code class=&#34;verbatim&#34;&gt;.Rprofile&lt;/code&gt; startup file.
This works if the file is placed in &lt;code class=&#34;verbatim&#34;&gt;C:/Users/myusername/Documents&lt;/code&gt;,
which the R command &lt;code class=&#34;verbatim&#34;&gt;path.expand(&amp;#39;~&amp;#39;)&lt;/code&gt; returns as be the default user
home on our classroom Windows PCs, but of course that file would also
get wiped every night, so placing the file there doesn&amp;#39;t help.&lt;/p&gt;
&lt;p&gt;
Nevertheless, to accomodate differing/changing versions of R and to
automate the process as much as possible, I decided to create a
&lt;code class=&#34;verbatim&#34;&gt;.Rprofile&lt;/code&gt; that checks if I am running Windows and if so, sets my R
library path to &lt;code class=&#34;verbatim&#34;&gt;.libPaths(&amp;#34;H:/R/win-library/X.Y&amp;#34;)&lt;/code&gt;.  The &lt;code class=&#34;verbatim&#34;&gt;X.Y&lt;/code&gt; is
replaced by whatever &amp;#34;major.minor&amp;#34; version of R is running (currently
3.5) and the directory is created if it doesn&amp;#39;t already exist.
Because this is done only if I am running Windows, it has no effect on
my usual, completely satisfactory R environment in Linux.&lt;/p&gt;
&lt;p&gt;
The contents of my current &lt;code class=&#34;verbatim&#34;&gt;.Rprofile&lt;/code&gt; file are given in the previous
section.  If you already have a non-empty &lt;code class=&#34;verbatim&#34;&gt;.Rprofile&lt;/code&gt;, you could add
this to it, and of course you could also create different versions for
different classes and put them in the appropriate places if that
tickles your fancy.  In the classroom I still have to run&lt;/p&gt;
&lt;div class=&#34;src src-r&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;source&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;H:/.Rprofile&amp;#34;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;after starting R, but I guess I&amp;#39;m going to have to live with that.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Footnotes
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;Coming from the UNIX/Linux world this already seems a bit
crazy.  Why am I running R as root here?  BTW, you should mentally
replace &amp;#34;3.5.2&amp;#34; with whatever version of R is currently installed on
the PC, and Windows/DOS users may be more comfortable replacing the
&amp;#34;/&amp;#34; path separator by &amp;#34;\&amp;#34;.&lt;/p&gt;
&lt;p&gt;
&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-2&#34; href=&#34;#footnote-2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;The classroom IT folks suggest using a USB thumbdrive as a
workaround.  &lt;code class=&#34;verbatim&#34;&gt;insert sad face here&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;
&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-3&#34; href=&#34;#footnote-3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;From what I saw on the classroom PCs, it appears that
&lt;code class=&#34;verbatim&#34;&gt;win-library&lt;/code&gt; is the R default name for the user&amp;#39;s R libraries in
Windows, so I decided to stick with that. (On Linux it&amp;#39;s something
like &lt;code class=&#34;verbatim&#34;&gt;x86_64-pc-linux-gnu-library&lt;/code&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr class=&#34;footnotes-separatator&#34;&gt;
&lt;div class=&#34;footnote-definitions&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Mathematical Statistics With Applications (7th Edition) by Wackerly, Mendenhall, and Scheaffer</title>
      <link>https://presnell.github.io/post/wackmendscheerrata/</link>
      <pubDate>Tue, 16 Jun 2020 23:37:37 -0400</pubDate>
      <guid>https://presnell.github.io/post/wackmendscheerrata/</guid>
      <description>
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
What Is This About?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
This started as a list of errata that either I or my students had
noticed in the exercises and the solutions manual for the 7th edition
of Wackerly, Mendenhall, and Scheaffer&amp;#39;s math stat text.&lt;/p&gt;
&lt;p&gt;
This list was posted as a plain ASCII text file on my old web pages
and since I took those pages down I have been surprised by the number
of students and teachers who either wanted a copy of the list, or who
had questions or comments about other exercises or solutions in the
text.  So I decided to repost them here as a public service.  I hope
that I have not introduced any errors in the process of converting
them to org-mode.  If you prefer the original text files you can grab
them &lt;a href=&#34;files/wms-exercises-errata.txt&#34;&gt;here (exercises)&lt;/a&gt; and &lt;a href=&#34;files/wms-solns-manual-errata.txt&#34;&gt;here (solutions)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
NB: I last taught from this text in 2008, not because I have any
problem with the text itself, but because in the intervening time I
have not been assigned to teach my department&amp;#39;s undergrad math stat
sequence.  I have not checked whether any of these errata have been
corrected in later printings.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Some Errata Found in the Exercises
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
This is just a list of a few errata that I happen to have noticed.  It
is not intended to be a comprehensive list.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
Exercise 2.79
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
&amp;#34;\(P(B) &amp;lt; 1\)&amp;#34; should be &amp;#34;\(P(B) &amp;gt; 0\)&amp;#34;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
Exercise 2.80
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Change &amp;#34;\(P(B) &amp;gt; 0\)&amp;#34; to &amp;#34;\(P(B) &amp;lt; 1\)&amp;#34;.  &lt;/p&gt;
&lt;p&gt;
Since \(A\) is a subset of \(B\), the assumption that \(P(A) &amp;gt; 0\)
already implies that \(P(B) &amp;gt; 0\), so it is redundant to assume that
\(P(B) &amp;gt; 0\).  If, on the other hand, \(P(B) = 1\), then \(A\) and
\(B\) are necessarily independent, and the objective of the exercise
is to show that \(A\) and \(B\) must be dependent except in the
uninteresting case that one or the other of the events has probability
zero or one.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
Exercise 2.106
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
I would change this to ask &amp;#34;what is the smallest possible value for
\(P(A)\)&amp;#34; or something similar.  &amp;#34;What is \(P(A)\)?&amp;#34; gives the
impression that one should be able to divine the exact value of
\(P(A)\) from the information given, which isn&amp;#39;t true.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
Exercise 3.38
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
This is the same as the triangular taste test example that I give
in class, except that here it is not carefully worded.  The
statement&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Suppose that the two formulas are equally attractive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;should be changed to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Suppose that the two formulas are indistinguishable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why?&lt;/p&gt;
&lt;p&gt;
If the two formulations are equally attractive on average but
distinguishable, say by everyone, then on the average half of all
tasters would choose the glass containing formula B.  (The other half
would choose one of the two glasses containing formula A.)  So, if the
two formulas are &amp;#34;equally attractive&amp;#34; but distinguishable by everyone,
then the distribution of \(Y\) would be binomial on \(n = 4\) trials with
success probability \(p = 1/2\).&lt;/p&gt;
&lt;p&gt;
If the two formulas are &amp;#34;equally attractive&amp;#34; and can be distinguished
by some but not all tasters, then we would need more information to do
the problem.&lt;/p&gt;
&lt;p&gt;
With the change I suggest above (&amp;#34;indistinguishable&amp;#34; rather than
&amp;#34;equally attractive&amp;#34; formulas), each taster is effectively picking at
random among the three glasses and \(Y\) is binomial on \(n = 4\)
trials with success probability \(p = 1/3\). This is what was actually
intended and is the solution given in the solutions manual.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-7&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-7&#34;&gt;
Exercise 5.85 
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-7&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
This exercise should probably be starred, since it refers to
exercise 5.65, which is starred.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-8&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-8&#34;&gt;
Exercise 5.94
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-8&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
The word &amp;#34;uncorrelated&amp;#34; should be deleted from this problem.  Nothing
in the problem changes if \(Y_1\) and \(Y_2\) are correlated.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-9&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-9&#34;&gt;
Some Errata Found in the Solutions Manual
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-9&#34; class=&#34;outline-text-2&#34;&gt;
&lt;div id=&#34;outline-container-headline-10&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-10&#34;&gt;
2.5 (b)
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-10&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
This is completely wrong.  It should be something like&lt;/p&gt;
&lt;p&gt;
\begin{align}
    B \cup (A \cap \bar B)
    &amp;amp;= (B \cup A) \cap (B \cup \bar B) \\
    &amp;amp;= (B \cup A) \cap S \\
    &amp;amp;= B \cup A \\
    &amp;amp;= A
\end{align}&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-11&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-11&#34;&gt;
2.42
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-11&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Should be \(P^{10}_3 = 10!/7! = 10 \times 9 \times 8 = 720\).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-12&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-12&#34;&gt;
2.44 (b)
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-12&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Change \(3\) to \(3!\) and \(45\) to \(90\).&lt;/p&gt;
&lt;p&gt;
Also, the solution to 2.44 (a) is correct but expressed in an odd
way.  It would be better as
\begin{equation}
\binom{8}{3} \times \binom{5}{5}.
\end{equation}&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-13&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-13&#34;&gt;
2.45
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-13&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Change the 7 to a 5. Answer should be \(\binom{17}{2\ \ 5\ \ 10} = 408,408\).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-14&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-14&#34;&gt;
2.59 (b)
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-14&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
There are actually 10 different kinds of straights (starting with any
of A, 2, 3, …, 10).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-15&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-15&#34;&gt;
2.65
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-15&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Should be  \(5!(2/6)(1/6)^4 = 5/162\).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-16&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-16&#34;&gt;
2.114
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-16&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
The answers are listed as parts a,b,b,d (two b&amp;#39;s and no c), and there
are a couple of misprints in the answer to b.  It should read&lt;/p&gt;
&lt;p&gt;
\begin{align}
    &amp;amp; \text{a. } P(LL) = (.95)(.10) = 0.095 &amp;amp;&amp;amp; \text{b. } P(LT) = (.95)(.9) = 0.855 \\
    &amp;amp; \text{c. } P(TL) = (.05)(.10) = 0.005 &amp;amp;&amp;amp; \text{d. } 1 ­ (.05)(.90) = 0.955
\end{align}&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-17&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-17&#34;&gt;
3.48(a)
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-17&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
For \(P(Y \ge 1)\), the solution should be&lt;/p&gt;
&lt;p&gt;
\begin{align}
  P(Y \ge 1)
  &amp;amp;= 1 - P(Y = 0) \\
  &amp;amp;= 1- \binom{5}{0}(0.9)^0(0.1)^5 \\
  &amp;amp;= 1 - (0.1)^5 \\
  &amp;amp;= 0.99999 \\
\end{align}&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-18&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-18&#34;&gt;
3.113
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-18&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
There is a 3 that should be changed to 1:&lt;/p&gt;
&lt;p&gt;
\begin{equation}
  \frac{\binom{8}{1}\binom{12}{5}}{\binom{20}{6}} + \frac{\binom{8}{0}\binom{12}{6}}{\binom{20}{6}} = 0.187.
\end{equation}&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-19&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-19&#34;&gt;
4.57
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-19&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
The density of \(D\) is wrong here.  It is not equal to \(1/4\) on the
interval \((.01, .05)\), but to \(1/(.05 - .01) = 25\).  Also, the
choice of \(d\) as the dummy variable of integration is unfortunate here,
because it leads to&lt;/p&gt;
&lt;p&gt;
\begin{equation}
  \frac{\pi}{6} \int_{.01}^{.05}  25\, d^3 \,dd
\end{equation}&lt;/p&gt;
&lt;p&gt;
and the \(dd\) is confusing.  Note that this is meant to be the same as&lt;/p&gt;
&lt;p&gt;
\begin{equation}
  \frac{\pi}{6} \int_{.01}^{.05}  25\, y^3 \,dy.
\end{equation}&lt;/p&gt;
&lt;p&gt;
Anyway, the numerical answer for the mean volume (\(.0000065\times\pi\))
is correct, but the answer for the variance of the volume is not
(it should be \(0.00000000003525\,\pi^2\), i.e., 
\((3.525397 \times 10^{-11})\,\pi^2\).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-20&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-20&#34;&gt;
4.74 (d)
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-20&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
This part has been left unfinished.  Having found that the lower
quartile of test scores is \(73.98\), we are supposed to find what
proportion of test takers score \(73.98 + 5 = 78.98\) or more.  Using
the normal table, the final answer is \(.4364\) (because of rounding,
this is slightly different from the answer you would get if if you did
the whole exercise using a computer, \(.4369\)).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-21&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-21&#34;&gt;
4.92
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-21&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
In the calculation of \(E(Y^3)\) and \(E(Y^4)\), the 100&amp;#39;s in the
integrals should be 10&amp;#39;s, and the results should be
\begin{equation}
  E(Y^3) = \Gamma(4)\times 10^4 = 3! \times 10^4 = 6000
\end{equation}
and
\begin{equation*}
  E(Y^4) = Γ(5)× 10^5 = 4! × 10^5 = 240,000.
\end{equation*}&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-22&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-22&#34;&gt;
5.9 (b)
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-22&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
The integral is set up incorrectly, but the numerical answer \(31/64\)
is correct.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-23&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-23&#34;&gt;
6.14
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-23&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Change \(P(Y_1 &amp;gt; u/Y_2)\) to \(1 - P(Y_1 &amp;gt; u/Y_2)\).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Changes</title>
      <link>https://presnell.github.io/post/changes/</link>
      <pubDate>Sun, 25 Aug 2019 20:53:56 -0400</pubDate>
      <guid>https://presnell.github.io/post/changes/</guid>
      <description>
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
What Is This About?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The IT folks hope to shut down our department&amp;#39;s legacy Apache web
server, so I&amp;#39;m in the process of moving my web presence, such as it
is, elsewhere, with elsewhere being github, at least for now.  I
probably won&amp;#39;t move much of the old stuff over, since it&amp;#39;s, well, old,
but if there was something on my old web page that was useful to you,
send me an email and I&amp;#39;ll see what I can to to make it available
again.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Course Web Pages
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Tonight I decided to hide the web pages for courses I&amp;#39;m currently
teaching under the &amp;#34;Teaching&amp;#34; menu up above, so if you&amp;#39;re in my
probability class, you know what to do.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Org Mode Tips and Tricks</title>
      <link>https://presnell.github.io/post/orgmode/</link>
      <pubDate>Sun, 25 Aug 2019 20:53:19 -0400</pubDate>
      <guid>https://presnell.github.io/post/orgmode/</guid>
      <description>
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Adding Git Information
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
&lt;a href=&#34;https://list.orgmode.org/875ymchv3o.fsf@ucl.ac.uk/&#34;&gt;This response from Eric Fraga&lt;/a&gt; might be useful.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Formatting Numerical Table Entries
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
It can be rather painful to properly format numerical tables from R
for export via org mode.  Here is a slightly modified version of &lt;a href=&#34;https://orgmode.org/manual/Results-of-Evaluation.html&#34;&gt;an
example from the org mode manual&lt;/a&gt; that leaves integers untouched but
prints floating point numbers with a specified format (almost).
Alternatively, check out the &lt;code class=&#34;verbatim&#34;&gt;ascii&lt;/code&gt; package for R.&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
#+NAME: round-tbl
#+BEGIN_SRC emacs-lisp :var tbl=&amp;#34;&amp;#34; :var fmt=&amp;#34;%.1f&amp;#34;
  (mapcar (lambda (row)
	    (mapcar (lambda (cell)
		      (if (floatp cell)
			  (format fmt cell)
			cell))
		    row))
	  tbl)
#+end_src

#+begin_src R :results replace :colnames yes :post round-tbl[:colnames yes](*this*)
  z &amp;lt;- dplyr::tribble(~i, ~x, 6, -pi, -4, exp(1), 1, 2)
  z
#+end_src

#+RESULTS:
|  i |    x |
|----+------|
|  6 | -3.1 |
| -4 |  2.7 |
|  1 |    2 |
&lt;/pre&gt;
&lt;p&gt;
Note that I get a 2 in the last cell, not the 2.0 that I was hoping
for.  FWIW, wrapping &lt;code class=&#34;verbatim&#34;&gt;z&lt;/code&gt; in &lt;code class=&#34;verbatim&#34;&gt;print.data.frame()&lt;/code&gt; in the R code does
not solve this problem.  The problem is that something in the
emacs/orgmode/elisp processing is intercepting the 2.000 and deciding
that it&amp;#39;s an integer.  Evidently I either need to figure that out or,
alternatively, rewrite the elisp code to operate on the table in a
column wise manner (ignoring the column header).&lt;/p&gt;
&lt;p&gt;
Note that it&amp;#39;s easy to change the format used, but of course it doesn&amp;#39;t
do a thing about the &amp;#34;2&amp;#34;.&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
#+begin_src R :results replace :colnames yes :post round-tbl[:colnames yes](*this*, fmt=&amp;#34;%.3f&amp;#34;)
  z &amp;lt;- dplyr::tribble(~i, ~x, 6, -pi, -4, exp(1), 1, 2)
  z
#+end_src

#+RESULTS:
|  i |      x |
|----+--------|
|  6 | -3.142 |
| -4 |  2.718 |
|  1 |      2 |
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Replacing Table Headers
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Sometimes I want to replace the variable names used as column header
in R export with a custom, multi-row header.  Here&amp;#39;s an example of how
this might be done.  I haven&amp;#39;t been careful about handling headers in
the elisp code, so one may need to be careful about setting
&lt;code class=&#34;verbatim&#34;&gt;:colnames&lt;/code&gt; (and possibly &lt;code class=&#34;verbatim&#34;&gt;:hlines&lt;/code&gt;) appropriately (note that
&lt;code class=&#34;verbatim&#34;&gt;:colnames nil&lt;/code&gt; is the default (and &lt;code class=&#34;verbatim&#34;&gt;:hlines no&lt;/code&gt;).  I have tried to
illustrate this below.&lt;/p&gt;
&lt;p&gt;
For me the tables would normally be something that had been computed
in R, but for simplicity I&amp;#39;m just reading the data straight from the
org file.&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
#+name: headed_table
| a     |   b |     c |
|-------+-----+-------|
| red   | 148 | 77.08 |
| white | 140 | 72.92 |
| blue  | 102 | 53.13 |

#+name: headless_table
| red   | 148 | 77.08 |
| white | 140 | 72.92 |
| blue  | 102 | 53.13 |

#+name: replacement_header
|       | Number | Percentage |
|       | of     | of         |
| Color | Flags  | Flags      |
&lt;/pre&gt;
&lt;p&gt;
Here&amp;#39;s the (simple) elisp code.&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
#+name: replace-header
#+BEGIN_SRC emacs-lisp :var tab=&amp;#34;&amp;#34; new_header=&amp;#34;&amp;#34;
  (append new_header (cons &amp;#39;hline tab))
#+END_SRC
&lt;/pre&gt;
&lt;p&gt;
Here&amp;#39;s how to call it straight from elisp to work with an existing org table.&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
#+call: replace-header(headed_table, replacement_header)

#+RESULTS:
|       | Number | Percentage |
|       |     of |         of |
| Color |  Flags |      Flags |
|-------+--------+------------|
| red   |    148 |      77.08 |
| white |    140 |      72.92 |
| blue  |    102 |      53.13 |
&lt;/pre&gt;
&lt;p&gt;
Here&amp;#39;s calling it from R with a table having a header.&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
#+begin_src R :var data=headed_table :post replace-header(*this*, replacement_header)
  data
#+end_src

#+RESULTS:
|       | Number | Percentage |
|       |     of |         of |
| Color |  Flags |      Flags |
|-------+--------+------------|
| red   |    148 |      77.08 |
| white |    140 |      72.92 |
| blue  |    102 |      53.13 |
&lt;/pre&gt;
&lt;p&gt;
Here&amp;#39;s calling it from R with a headless table (probably pretty rare
in practice).&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
#+begin_src R :var data=headless_table :colnames no :post replace-header(*this*, replacement_header)
  data
#+end_src

#+RESULTS:
|       | Number | Percentage |
|       |     of |         of |
| Color |  Flags |      Flags |
|-------+--------+------------|
| red   |    148 |      77.08 |
| white |    140 |      72.92 |
| blue  |    102 |      53.13 |
&lt;/pre&gt;
&lt;p&gt;
And here is how to combine this with the formatting provided by the
&lt;a href=&#34;round-tbl&#34;&gt;round-tbl&lt;/a&gt; function from elsewhere in this document: just compose the
functions in the &lt;code class=&#34;verbatim&#34;&gt;:post&lt;/code&gt; header argument.&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
#+begin_src R :var data=headed_table :post replace-header(round-tbl(*this*, &amp;#34;%.1f&amp;#34;), replacement_header)
  data
#+end_src

#+RESULTS:
|       | Number | Percentage |
|       |     of |         of |
| Color |  Flags |      Flags |
|-------+--------+------------|
| red   |    148 |       77.1 |
| white |    140 |       72.9 |
| blue  |    102 |       53.1 |
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Naming Source Code Blocks and Their Results for Referencing
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
&lt;a href=&#34;https://orgmode.org/list/878s5eax6c.fsf@nicolasgoaziou.fr/&#34;&gt;This response by Nicolas Goaziou&lt;/a&gt; is as clear an explanation as you&amp;#39;ll
ever see. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
&lt;code class=&#34;verbatim&#34;&gt;:results drawer&lt;/code&gt; and maybe &lt;code class=&#34;verbatim&#34;&gt;:wrap export org&lt;/code&gt;
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
  These might be useful for code blocks that need to be evaluated as
  org text.  Check the org list from around 2020-11-11 for more.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
Stacking Tables
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The org-mode equivalent of &lt;code&gt;rbind()&lt;/code&gt; in R is revealed &lt;a href=&#34;https://lists.gnu.org/archive/html/emacs-orgmode/2019-08/msg00261.html&#34;&gt;here&lt;/a&gt; by Emmanuel
Charpentier.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-7&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
Org Mode Interface to Canvas
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-7&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/titaniumbones/org-lms&#34;&gt;This project&lt;/a&gt; might be worth keeping an eye on if my use of Canvas expands.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-8&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-8&#34;&gt;
Easy-Hugo
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-8&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The &lt;a href=&#34;https://github.com/masasam/emacs-easy-hugo&#34;&gt;easy-hugo&lt;/a&gt; package might be useful for maintaining my web site.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
